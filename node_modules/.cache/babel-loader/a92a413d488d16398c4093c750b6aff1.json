{"ast":null,"code":"var _jsxFileName = \"/home/vlada1/Desktop/safeNotes/src/Auth/Login/Login.js\";\nimport React, { useCallback, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Formik, Field } from 'formik';\nimport * as actions from '../../store/actions/authAction';\nimport { useDispatch, useSelector } from 'react-redux';\n/****** Components */\n\nimport { FormError } from '../../Components/FormError/FormError';\nimport { LoginSchema } from '../ValidationSchemas';\nimport { MessageError } from '../../Components/MessageError/MessageError';\nimport { cleanMessage } from '../../store/actions/authAction';\nimport { LoginLoader } from '../../Components/Loader/LoginLoader';\nexport const Login = () => {\n  const dispatch = useDispatch();\n  const loginAction = useCallback(data => dispatch(actions.login(data)));\n  const error = useSelector(state => state.auth.error);\n  const loading = useSelector(state => state.auth.loading);\n  const cleanMessageAction = useCallback(() => dispatch(cleanMessage()));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"my-logo-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 25\n    }\n  }, \"Welcome\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"app-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 25\n    }\n  }, \"SafeNotes\"), /*#__PURE__*/React.createElement(\"i\", {\n    class: \"fas fa-lock\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    validateOnMount: true,\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validationSchema: LoginSchema,\n    onSubmit: (values, {\n      setSubmitting,\n      resetForm\n    }) => {\n      setSubmitting(true);\n      loginAction(values);\n      resetForm();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, ({\n    errors,\n    touched,\n    isValid,\n    handleSubmit\n  }) => {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      className: \"login-form\",\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fas fa-envelope iconEmail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 41\n      }\n    }), isValid ? /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fas fa-check checkIcon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 52\n      }\n    }) : null, /*#__PURE__*/React.createElement(Field, {\n      className: \"email-input\",\n      name: \"email\",\n      type: \"email\",\n      placeholder: \"Enter email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(FormError, {\n      touched: touched.email,\n      message: errors.email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fas fa-key iconPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 41\n      }\n    }), isValid ? /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fas fa-check checkIcon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 52\n      }\n    }) : null, /*#__PURE__*/React.createElement(Field, {\n      className: \"password-input\",\n      name: \"password\",\n      type: \"password\",\n      placeholder: \"Enter password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(FormError, {\n      touched: touched.password,\n      message: errors.password,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"login-btn\",\n      disabled: !isValid,\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 41\n      }\n    }, !isValid ? /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fas fa-ban\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 57\n      }\n    }) : 'Login'), /*#__PURE__*/React.createElement(MessageError, {\n      error: error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 41\n      }\n    })), loading ? /*#__PURE__*/React.createElement(LoginLoader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 48\n      }\n    }) : null);\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"register\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, \"Have no account on \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"app-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 44\n    }\n  }, \"SafeNotes\"), \" ?\"), /*#__PURE__*/React.createElement(Link, {\n    className: \"btn-register\",\n    to: \"/signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, \"Get registered\"))));\n};","map":{"version":3,"sources":["/home/vlada1/Desktop/safeNotes/src/Auth/Login/Login.js"],"names":["React","useCallback","useEffect","Link","Formik","Field","actions","useDispatch","useSelector","FormError","LoginSchema","MessageError","cleanMessage","LoginLoader","Login","dispatch","loginAction","data","login","error","state","auth","loading","cleanMessageAction","email","password","values","setSubmitting","resetForm","errors","touched","isValid","handleSubmit"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect } from 'react'\nimport { Link } from 'react-router-dom';\nimport { Formik, Field } from 'formik';\nimport * as actions from '../../store/actions/authAction';\nimport { useDispatch, useSelector } from 'react-redux';\n\n/****** Components */\nimport { FormError } from '../../Components/FormError/FormError';\nimport { LoginSchema } from '../ValidationSchemas';\nimport { MessageError } from '../../Components/MessageError/MessageError';\nimport { cleanMessage } from '../../store/actions/authAction';\nimport { LoginLoader } from '../../Components/Loader/LoginLoader';\n\nexport const Login = () => {\n\n    const dispatch = useDispatch();\n    const loginAction = useCallback((data) => dispatch(actions.login(data)));\n    const error = useSelector(state => state.auth.error);\n    const loading = useSelector(state => state.auth.loading);\n    const cleanMessageAction = useCallback(() => dispatch(cleanMessage()))\n\n\n\n\n\n    return (\n        <div className='login-content'>\n            <div className=\"login-container\">\n                <div className=\"logo\">\n                    <div className='my-logo-text'>\n                        <h2>Welcome</h2>\n                        <span className='app-title'>SafeNotes</span>\n                        <i class=\"fas fa-lock\"></i>\n                    </div>\n                </div>\n\n                <div className=\"login-form\">\n                    <Formik\n                        validateOnMount={true}\n                        initialValues={{ email: '', password: '' }}\n                        validationSchema={LoginSchema}\n                        onSubmit={(values, { setSubmitting, resetForm }) => {\n                            setSubmitting(true);\n                            loginAction(values);\n                            resetForm();\n                        }}\n                    >\n                        {({ errors, touched, isValid, handleSubmit }) => {\n                            return (\n                                <form className='login-form' onSubmit={handleSubmit}>\n                                    <div className=\"input-group\">\n                                        <i class=\"fas fa-envelope iconEmail\"></i>\n                                        {isValid ? <i class=\"fas fa-check checkIcon\"></i> : null}\n                                        <Field\n                                            className='email-input'\n                                            name='email'\n                                            type=\"email\"\n                                            placeholder='Enter email' />\n                                        <FormError touched={touched.email} message={errors.email} />\n                                    </div>\n                                    <div className=\"input-group\">\n                                        <i class=\"fas fa-key iconPassword\"></i>\n                                        {isValid ? <i class=\"fas fa-check checkIcon\"></i> : null}\n                                        <Field\n                                            className='password-input'\n                                            name='password'\n                                            type=\"password\"\n                                            placeholder='Enter password' />\n                                        <FormError touched={touched.password} message={errors.password} />\n                                    </div>\n                                    <div className=\"input-group\">\n                                        <button\n                                            className='login-btn'\n                                            disabled={!isValid}\n                                            type=\"submit\"\n                                        >\n                                            {!isValid ? <i class=\"fas fa-ban\"></i> : 'Login'}\n\n                                        </button>\n                                        <MessageError error={error} />\n                                    </div>\n                                    {loading ? <LoginLoader /> : null}\n\n                                </form>\n                            )\n                        }}\n                    </Formik>\n                </div>\n\n                <div className=\"register\">\n                    <h3>Have no account on <span className='app-title'>SafeNotes</span> ?</h3>\n                    <Link className='btn-register' to='/signup'>Get registered</Link>\n                </div>\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}