{"ast":null,"code":"var _jsxFileName = \"/home/vlada1/Desktop/safeNotes/src/Routes/routes.js\";\nimport React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n/****** Components */\n\nimport { Login } from '../Auth/Login/Login';\nimport { SignUp } from '../Auth/SignUp/SignUp';\nimport { Navbar } from '../Components/Navbar/Navbar';\nimport { Logout } from '../Auth/Logout/Logout';\nimport { VerifyEmail } from '../Auth/VerifyEmail/VerifyEmail';\nimport { UserProfile } from '../Auth/UserProfile/UserProfile';\nimport { Notes } from '../Auth/Notes/Notes';\nexport const Routes = () => {\n  const loggedIn = useSelector(state => state.firebase.auth.uid);\n  const emailVerified = useSelector(state => state.firebase.auth.emailVerified);\n  let routes; // when user logged in but not verified\n\n  if (loggedIn && !emailVerified) {\n    routes = /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: VerifyEmail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/navbar\",\n      component: Navbar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/logout\",\n      component: Logout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/profile\",\n      component: UserProfile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    })); // when user logged in and verified\n  } else if (loggedIn && emailVerified) {\n    routes = /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Notes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/logout\",\n      component: Logout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/profile\",\n      component: UserProfile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }));\n  } else {\n    routes = /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Login,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/signup\",\n      component: SignUp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: loggedIn ? 'loggedIn-content' : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, loggedIn ? /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }\n  }) : null, routes);\n};","map":{"version":3,"sources":["/home/vlada1/Desktop/safeNotes/src/Routes/routes.js"],"names":["React","Switch","Route","Redirect","useSelector","Login","SignUp","Navbar","Logout","VerifyEmail","UserProfile","Notes","Routes","loggedIn","state","firebase","auth","uid","emailVerified","routes"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\n/****** Components */\nimport { Login } from '../Auth/Login/Login';\nimport { SignUp } from '../Auth/SignUp/SignUp';\nimport { Navbar } from '../Components/Navbar/Navbar';\nimport { Logout } from '../Auth/Logout/Logout';\nimport { VerifyEmail } from '../Auth/VerifyEmail/VerifyEmail';\nimport { UserProfile } from '../Auth/UserProfile/UserProfile';\nimport { Notes } from '../Auth/Notes/Notes';\n\n\n\nexport const Routes = () => {\n    const loggedIn = useSelector(state => state.firebase.auth.uid)\n    const emailVerified = useSelector(state => state.firebase.auth.emailVerified);\n\n    let routes;\n\n    // when user logged in but not verified\n    if (loggedIn && !emailVerified) {\n        routes = (\n            <Switch>\n                <Route exact path='/' component={VerifyEmail} />\n                <Route path='/navbar' component={Navbar} />\n                <Route path='/logout' component={Logout} />\n                <Route path='/profile' component={UserProfile} />\n                <Redirect to='/' />\n            </Switch>\n        )\n\n        // when user logged in and verified\n    } else if (loggedIn && emailVerified) {\n        routes = (\n            <Switch>\n                <Route exact path='/' component={Notes} />\n                <Route path='/logout' component={Logout} />\n                <Route exact path='/profile' component={UserProfile} />\n\n            </Switch>\n        )\n\n    } else {\n        routes = (\n            <Switch>\n                <Route exact path='/' component={Login} />\n                <Route exact path='/signup' component={SignUp} />\n                <Redirect to='/' />\n            </Switch>\n        )\n    }\n\n    return (\n        <div className={loggedIn ? 'loggedIn-content' : null}>\n            {loggedIn ? <Navbar /> : null}\n            {routes}\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}