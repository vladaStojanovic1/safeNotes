{"ast":null,"code":"import * as actions from '../types';\n/*********  Sign Up action */\n\nexport const signUp = data => async (dispatch, getState, {\n  getFirebase,\n  getFirestore\n}) => {\n  const firebase = getFirebase();\n  const firestore = getFirestore();\n  dispatch({\n    type: actions.AUTH_START\n  });\n  console.log(firebase);\n\n  try {\n    const res = await firebase.auth().createUserWithEmailAndPassword(data.email, data.password);\n    /*** Send the verification email */\n\n    const user = firebase.auth().currentUser;\n    await user.sendEmailVerification();\n    await firestore.collection('users').doc(res.user.uid).set({\n      firstName: data.firstName,\n      lastName: data.lastName,\n      initials: `${data.firstName[0]}${data.lastName[0]}`\n    });\n    dispatch({\n      type: actions.AUTH_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: actions.AUTH_FAIL,\n      payload: error.message\n    });\n  }\n\n  dispatch({\n    type: actions.AUTH_END\n  });\n};\n/******** Login Action */\n\nexport const login = data => async (dispatch, getState, {\n  getFirebase\n}) => {\n  const firebase = getFirebase();\n  dispatch({\n    type: actions.AUTH_START\n  });\n\n  try {\n    await firebase.auth().signInWithEmailAndPassword(data.email, data.password);\n    dispatch({\n      type: actions.AUTH_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: actions.AUTH_FAIL,\n      payload: error.message\n    });\n  }\n};","map":{"version":3,"sources":["/home/vlada1/Desktop/safeNotes/src/store/actions/authAction.js"],"names":["actions","signUp","data","dispatch","getState","getFirebase","getFirestore","firebase","firestore","type","AUTH_START","console","log","res","auth","createUserWithEmailAndPassword","email","password","user","currentUser","sendEmailVerification","collection","doc","uid","set","firstName","lastName","initials","AUTH_SUCCESS","error","AUTH_FAIL","payload","message","AUTH_END","login","signInWithEmailAndPassword"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,UAAzB;AAEA;;AACA,OAAO,MAAMC,MAAM,GAAGC,IAAI,IAAI,OAAOC,QAAP,EAAiBC,QAAjB,EAA2B;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAA3B,KAA6D;AAEvF,QAAMC,QAAQ,GAAGF,WAAW,EAA5B;AACA,QAAMG,SAAS,GAAGF,YAAY,EAA9B;AAEAH,EAAAA,QAAQ,CAAC;AAAEM,IAAAA,IAAI,EAAET,OAAO,CAACU;AAAhB,GAAD,CAAR;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;;AAEA,MAAI;AACA,UAAMM,GAAG,GAAG,MAAMN,QAAQ,CACrBO,IADa,GAEbC,8BAFa,CAEkBb,IAAI,CAACc,KAFvB,EAE8Bd,IAAI,CAACe,QAFnC,CAAlB;AAIA;;AACA,UAAMC,IAAI,GAAGX,QAAQ,CAACO,IAAT,GAAgBK,WAA7B;AACA,UAAMD,IAAI,CAACE,qBAAL,EAAN;AAEA,UAAMZ,SAAS,CACVa,UADC,CACU,OADV,EAEDC,GAFC,CAEGT,GAAG,CAACK,IAAJ,CAASK,GAFZ,EAGDC,GAHC,CAGG;AACDC,MAAAA,SAAS,EAAEvB,IAAI,CAACuB,SADf;AAEDC,MAAAA,QAAQ,EAAExB,IAAI,CAACwB,QAFd;AAGDC,MAAAA,QAAQ,EAAG,GAAEzB,IAAI,CAACuB,SAAL,CAAe,CAAf,CAAkB,GAAEvB,IAAI,CAACwB,QAAL,CAAc,CAAd,CAAiB;AAHjD,KAHH,CAAN;AAQAvB,IAAAA,QAAQ,CAAC;AAAEM,MAAAA,IAAI,EAAET,OAAO,CAAC4B;AAAhB,KAAD,CAAR;AAEH,GAnBD,CAmBE,OAAOC,KAAP,EAAc;AACZ1B,IAAAA,QAAQ,CAAC;AAAEM,MAAAA,IAAI,EAAET,OAAO,CAAC8B,SAAhB;AAA2BC,MAAAA,OAAO,EAAEF,KAAK,CAACG;AAA1C,KAAD,CAAR;AACH;;AACD7B,EAAAA,QAAQ,CAAC;AAAEM,IAAAA,IAAI,EAAET,OAAO,CAACiC;AAAhB,GAAD,CAAR;AACH,CA/BM;AAmCP;;AACA,OAAO,MAAMC,KAAK,GAAIhC,IAAD,IAAU,OAAOC,QAAP,EAAiBC,QAAjB,EAA2B;AAAEC,EAAAA;AAAF,CAA3B,KAA+C;AAC1E,QAAME,QAAQ,GAAGF,WAAW,EAA5B;AACAF,EAAAA,QAAQ,CAAC;AAAEM,IAAAA,IAAI,EAAET,OAAO,CAACU;AAAhB,GAAD,CAAR;;AACA,MAAI;AACA,UAAMH,QAAQ,CACTO,IADC,GAEDqB,0BAFC,CAE0BjC,IAAI,CAACc,KAF/B,EAEsCd,IAAI,CAACe,QAF3C,CAAN;AAIAd,IAAAA,QAAQ,CAAC;AAAEM,MAAAA,IAAI,EAAET,OAAO,CAAC4B;AAAhB,KAAD,CAAR;AACH,GAND,CAME,OAAOC,KAAP,EAAc;AACZ1B,IAAAA,QAAQ,CAAC;AAAEM,MAAAA,IAAI,EAAET,OAAO,CAAC8B,SAAhB;AAA2BC,MAAAA,OAAO,EAAEF,KAAK,CAACG;AAA1C,KAAD,CAAR;AACH;AACJ,CAZM","sourcesContent":["import * as actions from '../types';\n\n/*********  Sign Up action */\nexport const signUp = data => async (dispatch, getState, { getFirebase, getFirestore }) => {\n\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n\n    dispatch({ type: actions.AUTH_START });\n    console.log(firebase);\n\n    try {\n        const res = await firebase\n            .auth()\n            .createUserWithEmailAndPassword(data.email, data.password)\n\n        /*** Send the verification email */\n        const user = firebase.auth().currentUser;\n        await user.sendEmailVerification();\n\n        await firestore\n            .collection('users')\n            .doc(res.user.uid)\n            .set({\n                firstName: data.firstName,\n                lastName: data.lastName,\n                initials: `${data.firstName[0]}${data.lastName[0]}`\n            })\n        dispatch({ type: actions.AUTH_SUCCESS });\n\n    } catch (error) {\n        dispatch({ type: actions.AUTH_FAIL, payload: error.message })\n    }\n    dispatch({ type: actions.AUTH_END })\n}\n\n\n\n/******** Login Action */\nexport const login = (data) => async (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n    dispatch({ type: actions.AUTH_START })\n    try {\n        await firebase\n            .auth()\n            .signInWithEmailAndPassword(data.email, data.password)\n\n        dispatch({ type: actions.AUTH_SUCCESS })\n    } catch (error) {\n        dispatch({ type: actions.AUTH_FAIL, payload: error.message })\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}