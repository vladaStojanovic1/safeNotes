{"ast":null,"code":"var _jsxFileName = \"/home/vlada1/Desktop/safeNotes/src/Auth/Notes/Notes.js\";\nimport React, { useState, useCallback } from 'react';\nimport { Formik, Field } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useFirestoreConnect } from 'react-redux-firebase'; // Components\n\nimport { Modal } from '../../Components/Modal/Modal';\nimport { NotesSchema } from '../ValidationSchemas';\nimport { FormError } from '../../Components/FormError/FormError';\nimport noteModal from '../../images/note-modal2.png';\nimport { addNote } from '../../store/actions/noteAction';\nimport DisplayNotes from './DisplayNotes';\nimport { MessageError } from '../../Components/MessageError/MessageError';\nexport const Notes = () => {\n  const [modalOpened, setModalOpened] = useState(false);\n  const dispatch = useDispatch();\n  const addNoteAction = useCallback(data => dispatch(addNote(data)));\n  const error = useSelector(state => state.notes.error);\n  const userId = useSelector(state => state.firebase.auth.uid);\n  const userName = useSelector(state => state.firebase.profile.firstName);\n  useFirestoreConnect([{\n    collection: 'notes',\n    doc: userId\n  }]);\n  const myNotes = useSelector(({\n    firestore: {\n      data\n    }\n  }) => data.notes && data.notes[userId]);\n  const notesLength = myNotes ? myNotes.notes.length : '0';\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"notes-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"notes-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, \"Your Notes\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, userName, \" you have \", notesLength, \" notes from now...\")), /*#__PURE__*/React.createElement(\"i\", {\n    onClick: () => setModalOpened(true),\n    class: \"fas fa-plus-circle hvr-pop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Modal, {\n    close: () => setModalOpened(false),\n    opened: modalOpened,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      note: ''\n    },\n    validationSchema: NotesSchema,\n    validateOnMount: true,\n    onSubmit: async (values, {\n      resetForm,\n      setSubmitting\n    }) => {\n      await addNoteAction(values);\n      setModalOpened(false);\n      setSubmitting(false);\n      resetForm();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, ({\n    isSubmitting,\n    touched,\n    isValid,\n    resetForm,\n    onSubmit,\n    errors,\n    handleSubmit\n  }) => /*#__PURE__*/React.createElement(\"form\", {\n    className: \"note-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    component: \"textarea\",\n    rows: \"14\",\n    cols: \"20\",\n    type: \"text\",\n    name: \"note\",\n    placeholder: \"Add your new note...\",\n    className: \"note-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(FormError, {\n    touched: touched.note,\n    message: errors.note,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"note-btn-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    disabled: !isValid,\n    className: \"modal-add-note-btn\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 37\n    }\n  }, \"Add note\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"x-modal-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => {\n      setModalOpened(false);\n      resetForm();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"far fa-times-circle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 37\n    }\n  }))))), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"note-modal\",\n    src: noteModal,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(MessageError, {\n    error: error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(DisplayNotes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }));\n};","map":{"version":3,"sources":["/home/vlada1/Desktop/safeNotes/src/Auth/Notes/Notes.js"],"names":["React","useState","useCallback","Formik","Field","useDispatch","useSelector","useFirestoreConnect","Modal","NotesSchema","FormError","noteModal","addNote","DisplayNotes","MessageError","Notes","modalOpened","setModalOpened","dispatch","addNoteAction","data","error","state","notes","userId","firebase","auth","uid","userName","profile","firstName","collection","doc","myNotes","firestore","notesLength","length","note","values","resetForm","setSubmitting","isSubmitting","touched","isValid","onSubmit","errors","handleSubmit"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { Formik, Field } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useFirestoreConnect } from 'react-redux-firebase'\n\n// Components\nimport { Modal } from '../../Components/Modal/Modal';\nimport { NotesSchema } from '../ValidationSchemas';\nimport { FormError } from '../../Components/FormError/FormError';\nimport noteModal from '../../images/note-modal2.png';\nimport { addNote } from '../../store/actions/noteAction';\nimport DisplayNotes from './DisplayNotes';\nimport { MessageError } from '../../Components/MessageError/MessageError';\n\nexport const Notes = () => {\n\n    const [modalOpened, setModalOpened] = useState(false);\n    const dispatch = useDispatch();\n    const addNoteAction = useCallback((data) => dispatch(addNote(data)));\n    const error = useSelector(state => state.notes.error);\n    const userId = useSelector(state => state.firebase.auth.uid);\n    const userName = useSelector(state => state.firebase.profile.firstName);\n\n    useFirestoreConnect([{\n        collection: 'notes',\n        doc: userId\n    }])\n\n    const myNotes = useSelector(\n        ({ firestore: { data } }) => data.notes && data.notes[userId]\n    )\n    const notesLength = myNotes ? myNotes.notes.length : '0';\n\n    return (\n        <div className='notes-content'>\n\n            <div className='notes-title'>\n                <div>\n                    <h2>Your Notes</h2>\n                    <p>{userName} you have {notesLength} notes from now...</p>\n                </div>\n\n                <i onClick={() => setModalOpened(true)}\n                    class=\"fas fa-plus-circle hvr-pop\"></i>\n            </div>\n\n            <Modal\n                close={() => setModalOpened(false)}\n                opened={modalOpened}\n            >\n\n                <Formik initialValues={{\n                    note: ''\n                }}\n                    validationSchema={NotesSchema}\n                    validateOnMount={true}\n                    onSubmit={async (values, { resetForm, setSubmitting }) => {\n                        await addNoteAction(values);\n                        setModalOpened(false)\n                        setSubmitting(false)\n                        resetForm();\n                    }}>\n\n                    {({ isSubmitting, touched, isValid, resetForm, onSubmit, errors, handleSubmit }) => (\n                        <form className='note-form' onSubmit={handleSubmit}>\n\n                            <div className=\"input-group\">\n                                <Field\n                                    component=\"textarea\" rows=\"14\" cols=\"20\"\n                                    type='text'\n                                    name='note'\n                                    placeholder='Add your new note...'\n                                    className='note-input'\n                                />\n                                <FormError touched={touched.note} message={errors.note} />\n\n                            </div>\n\n                            <div className=\"note-btn-div\">\n                                <div className=\"input-group\">\n                                    <button\n                                        disabled={!isValid}\n                                        className='modal-add-note-btn'\n                                        type='submit'>\n                                        Add note\n                                </button>\n                                </div>\n\n                            </div>\n                            <div className=\"x-modal-btn\">\n                                <button\n\n                                    type='button'\n                                    onClick={() => {\n                                        setModalOpened(false);\n                                        resetForm();\n                                    }}>\n                                    <i class=\"far fa-times-circle\"></i>\n                                </button>\n                            </div>\n\n                        </form>\n                    )}\n\n                </Formik>\n\n                <img className='note-modal' src={noteModal} alt=\"\" />\n                <MessageError error={error} />\n            </Modal>\n\n            <DisplayNotes />\n\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}