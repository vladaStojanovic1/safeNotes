{"ast":null,"code":"import * as actions from '../types';\n/*********  Sign Up action */\n\nexport const signUp = data => async (dispatch, getState, {\n  getFirebase,\n  getFirestore\n}) => {\n  const firebase = getFirebase();\n  const firestore = getFirestore();\n  dispatch({\n    type: actions.AUTH_START\n  });\n  console.log(firebase);\n\n  try {\n    const res = await firebase.auth().createUserWithEmailAndPassword(data.email, data.password);\n    /*** Send the verification email */\n\n    const user = firebase.auth().currentUser;\n    await user.sendEmailVerification();\n    await firestore.collection('users').doc(res.user.uid).set({\n      firstName: data.firstName,\n      lastName: data.lastName,\n      initials: `${data.firstName[0]}${data.lastName[0]}`\n    });\n    dispatch({\n      type: actions.AUTH_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: actions.AUTH_FAIL,\n      payload: error.message\n    });\n  }\n\n  dispatch({\n    type: actions.AUTH_END\n  });\n};\n/*********** Logout Action */\n\nexport const logout = () => async (dispatch, getState, {\n  getFirebase\n}) => {\n  const firebase = getFirebase();\n\n  try {\n    await firebase.auth().signOut();\n  } catch (error) {\n    console.log(error.message);\n  }\n\n  dispatch({\n    type: actions.AUTH_END\n  });\n};\n/******** Login Action */\n\nexport const login = data => async (dispatch, getState, {\n  getFirebase\n}) => {\n  const firebase = getFirebase();\n  dispatch({\n    type: actions.AUTH_START\n  });\n\n  try {\n    await firebase.auth().signInWithEmailAndPassword(data.email, data.password);\n    dispatch({\n      type: actions.AUTH_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: actions.AUTH_FAIL,\n      payload: error.message\n    });\n  }\n};\n/******** Verify Email Action */\n\nexport const verifyEmail = () => async (dispatch, getState, {\n  getFirebase\n}) => {\n  const firebase = getFirebase();\n  dispatch({\n    type: actions.VERIFY_START\n  });\n\n  try {\n    const user = firebase.auth().currentUser;\n    await user.sendEmailVerification();\n    dispatch({\n      type: actions.VERIFY_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: actions.VERIFY_FAIL,\n      payload: error.message\n    });\n  }\n};\n/********* Edit Profile Action */\n\nexport const editProfile = (data, image) => async (dispatch, getState, {\n  getFirebase,\n  getFirestore\n}) => {\n  const firebase = getFirebase();\n  const firestore = getFirestore();\n  const userEmail = getState().firebase.auth.email;\n  const user = firebase.auth().currentUser;\n  const userId = getState().firebase.auth.uid;\n  dispatch({\n    type: actions.PROFILE_START\n  });\n\n  try {\n    if (image) {\n      const storageRef = firebase.storage().ref();\n      const storageChild = storageRef.child(image.name);\n      const postCover = await storageChild.put(image);\n      const downloadURL = await storageChild.getDownloadURL();\n      const fileRef = postCover.ref.location.path;\n      await firestore.collection('users').doc(userId).set({\n        firstName: data.firstName,\n        lastName: data.lastName,\n        cover: downloadURL,\n        fileRef: fileRef,\n        initials: `${data.firstName[0]}${data.lastName[0]}`\n      });\n    } else {\n      await firestore.collection('users').doc(userId).set({\n        firstName: data.firstName,\n        lastName: data.lastName,\n        initials: `${data.firstName[0]}${data.lastName[0]}`\n      });\n    } // Update email\n\n\n    if (data.email !== userEmail) {\n      await user.updateEmail(data.email);\n    } // Update Password\n\n\n    if (data.password.length > 0) {\n      console.log('update pass');\n      await user.updatePassword(data.password);\n    }\n\n    dispatch({\n      type: actions.PROFILE_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: actions.PROFILE_FAIL,\n      payload: error.message\n    });\n  }\n};\n/*********** Delete Profile Action */\n\nexport const deleteUserProfile = () => async (dispatch, getState, {\n  getFirebase,\n  getFirestore\n}) => {\n  const firebase = getFirebase();\n  const firestore = getFirestore();\n  const user = firebase.auth().currentUser;\n  const userId = getState().firebase.auth.uid;\n  dispatch({\n    type: actions.DELETE_USER_START\n  });\n\n  try {\n    await firestore.collection('users').doc(userId).delete();\n    await firestore.collection('notes').doc(userId).delete();\n    await user.delete();\n  } catch (error) {\n    dispatch({\n      type: actions.DELETE_USER_FAIL,\n      payload: error.message\n    });\n  }\n};\n/********** Clean message */\n\nexport const cleanMessage = () => {\n  return {\n    type: actions.CLEAN_UP\n  };\n};","map":{"version":3,"sources":["/home/vlada1/Desktop/safeNotes/src/store/actions/authAction.js"],"names":["actions","signUp","data","dispatch","getState","getFirebase","getFirestore","firebase","firestore","type","AUTH_START","console","log","res","auth","createUserWithEmailAndPassword","email","password","user","currentUser","sendEmailVerification","collection","doc","uid","set","firstName","lastName","initials","AUTH_SUCCESS","error","AUTH_FAIL","payload","message","AUTH_END","logout","signOut","login","signInWithEmailAndPassword","verifyEmail","VERIFY_START","VERIFY_SUCCESS","VERIFY_FAIL","editProfile","image","userEmail","userId","PROFILE_START","storageRef","storage","ref","storageChild","child","name","postCover","put","downloadURL","getDownloadURL","fileRef","location","path","cover","updateEmail","length","updatePassword","PROFILE_SUCCESS","PROFILE_FAIL","deleteUserProfile","DELETE_USER_START","delete","DELETE_USER_FAIL","cleanMessage","CLEAN_UP"],"mappings":"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","sourcesContent":["import * as actions from '../types';\n\n/*********  Sign Up action */\nexport const signUp = data => async (dispatch, getState, { getFirebase, getFirestore }) => {\n\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n\n    dispatch({ type: actions.AUTH_START });\n    console.log(firebase);\n\n    try {\n        const res = await firebase\n            .auth()\n            .createUserWithEmailAndPassword(data.email, data.password)\n\n        /*** Send the verification email */\n        const user = firebase.auth().currentUser;\n        await user.sendEmailVerification();\n\n        await firestore\n            .collection('users')\n            .doc(res.user.uid)\n            .set({\n                firstName: data.firstName,\n                lastName: data.lastName,\n                initials: `${data.firstName[0]}${data.lastName[0]}`\n            })\n        dispatch({ type: actions.AUTH_SUCCESS });\n\n    } catch (error) {\n        dispatch({ type: actions.AUTH_FAIL, payload: error.message })\n    }\n    dispatch({ type: actions.AUTH_END })\n}\n\n\n/*********** Logout Action */\nexport const logout = () => async (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n\n    try {\n        await firebase.auth().signOut();\n    } catch (error) {\n        console.log(error.message);\n    }\n    dispatch({ type: actions.AUTH_END })\n}\n\n\n/******** Login Action */\nexport const login = (data) => async (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n    dispatch({ type: actions.AUTH_START })\n    try {\n        await firebase\n            .auth()\n            .signInWithEmailAndPassword(data.email, data.password)\n\n        dispatch({ type: actions.AUTH_SUCCESS })\n    } catch (error) {\n        dispatch({ type: actions.AUTH_FAIL, payload: error.message })\n    }\n}\n\n\n/******** Verify Email Action */\nexport const verifyEmail = () => async (dispatch, getState, { getFirebase }) => {\n\n    const firebase = getFirebase();\n    dispatch({ type: actions.VERIFY_START });\n    try {\n        const user = firebase.auth().currentUser;\n        await user.sendEmailVerification();\n        dispatch({ type: actions.VERIFY_SUCCESS });\n    } catch (error) {\n        dispatch({ type: actions.VERIFY_FAIL, payload: error.message });\n    }\n}\n\n\n/********* Edit Profile Action */\nexport const editProfile = (data, image) => async (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n    const userEmail = getState().firebase.auth.email;\n    const user = firebase.auth().currentUser;\n    const userId = getState().firebase.auth.uid;\n\n    dispatch({ type: actions.PROFILE_START })\n    try {\n\n        if (image) {\n            const storageRef = firebase.storage().ref();\n            const storageChild = storageRef.child(image.name);\n            const postCover = await storageChild.put(image);\n            const downloadURL = await storageChild.getDownloadURL();\n            const fileRef = postCover.ref.location.path;\n\n            await firestore\n                .collection('users')\n                .doc(userId)\n                .set({\n                    firstName: data.firstName,\n                    lastName: data.lastName,\n                    cover: downloadURL,\n                    fileRef: fileRef,\n                    initials: `${data.firstName[0]}${data.lastName[0]}`\n                })\n        } else {\n            await firestore\n                .collection('users')\n                .doc(userId)\n                .set({\n                    firstName: data.firstName,\n                    lastName: data.lastName,\n                    initials: `${data.firstName[0]}${data.lastName[0]}`\n                })\n        }\n        // Update email\n        if (data.email !== userEmail) {\n\n            await user.updateEmail(data.email)\n        }\n\n\n        // Update Password\n        if (data.password.length > 0) {\n            console.log('update pass');\n            await user.updatePassword(data.password)\n        }\n\n        dispatch({ type: actions.PROFILE_SUCCESS })\n    } catch (error) {\n        dispatch({ type: actions.PROFILE_FAIL, payload: error.message })\n    }\n}\n\n\n\n/*********** Delete Profile Action */\nexport const deleteUserProfile = () => async (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n    const user = firebase.auth().currentUser;\n    const userId = getState().firebase.auth.uid;\n\n    dispatch({ type: actions.DELETE_USER_START });\n\n    try {\n        await firestore\n            .collection('users')\n            .doc(userId)\n            .delete()\n\n        await firestore\n            .collection('notes')\n            .doc(userId)\n            .delete()\n\n        await user.delete();\n\n    } catch (error) {\n        dispatch({ type: actions.DELETE_USER_FAIL, payload: error.message });\n    }\n}\n\n\n\n/********** Clean message */\nexport const cleanMessage = () => {\n    return { type: actions.CLEAN_UP }\n}"]},"metadata":{},"sourceType":"module"}