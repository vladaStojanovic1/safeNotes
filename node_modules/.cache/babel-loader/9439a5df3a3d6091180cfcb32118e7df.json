{"ast":null,"code":"var _jsxFileName = \"/home/vlada1/Desktop/safeNotes/src/Auth/Notes/DisplayNotes.js\";\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useFirestoreConnect } from 'react-redux-firebase';\nimport { Note } from './Note';\nimport { NotesLoader } from '../../Components/Loader/NotesLoader';\n\nconst DisplayNotes = () => {\n  const userId = useSelector(state => state.firebase.auth.uid);\n  const notes = useSelector(state => state.firestore.data.notes);\n  useFirestoreConnect([{\n    collection: 'notes',\n    doc: userId\n  }]);\n  const myNotes = useSelector(({\n    firestore: {\n      data\n    }\n  }) => data.notes && data.notes[userId]);\n  let content;\n\n  if (!notes) {\n    content = /*#__PURE__*/React.createElement(NotesLoader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 19\n      }\n    });\n  } else if (!notes[userId] || !notes[userId].notes) {\n    content = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"empty-notes-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    }, \"You don't have notes..\"), /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"app-title-empty\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 49\n      }\n    }, \"Write your\"), \" SafeNotes\", /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fas fa-lock\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 82\n      }\n    })));\n  } else if (myNotes.notes.length < 1) {\n    content = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"empty-notes-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, \"You don't have notes..\"), /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"app-title-empty\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 49\n      }\n    }, \"Write your\"), \" SafeNotes\", /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fas fa-lock\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 82\n      }\n    })));\n  } else {\n    content = myNotes.notes.slice(0).reverse().map(note => /*#__PURE__*/React.createElement(Note, {\n      key: note.id,\n      note: note,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 30\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"note-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, content);\n};\n\nexport default DisplayNotes;","map":{"version":3,"sources":["/home/vlada1/Desktop/safeNotes/src/Auth/Notes/DisplayNotes.js"],"names":["React","useSelector","useFirestoreConnect","Note","NotesLoader","DisplayNotes","userId","state","firebase","auth","uid","notes","firestore","data","collection","doc","myNotes","content","length","slice","reverse","map","note","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,mBAAT,QAAoC,sBAApC;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,WAAT,QAA4B,qCAA5B;;AAGA,MAAMC,YAAY,GAAG,MAAM;AAEvB,QAAMC,MAAM,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,QAAN,CAAeC,IAAf,CAAoBC,GAA9B,CAA1B;AACA,QAAMC,KAAK,GAAGV,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACK,SAAN,CAAgBC,IAAhB,CAAqBF,KAA/B,CAAzB;AAEAT,EAAAA,mBAAmB,CAAC,CAAC;AACjBY,IAAAA,UAAU,EAAE,OADK;AAEjBC,IAAAA,GAAG,EAAET;AAFY,GAAD,CAAD,CAAnB;AAKA,QAAMU,OAAO,GAAGf,WAAW,CACvB,CAAC;AAAEW,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AAAb,GAAD,KAA6BA,IAAI,CAACF,KAAL,IAAcE,IAAI,CAACF,KAAL,CAAWL,MAAX,CADpB,CAA3B;AAIA,MAAIW,OAAJ;;AAEA,MAAI,CAACN,KAAL,EAAY;AACRM,IAAAA,OAAO,gBAAG,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAV;AAEH,GAHD,MAGO,IAAI,CAACN,KAAK,CAACL,MAAD,CAAN,IAAkB,CAACK,KAAK,CAACL,MAAD,CAAL,CAAcK,KAArC,EAA4C;AAC/CM,IAAAA,OAAO,gBACH;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,eAEI;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAhC,6BAAiE;AAAG,MAAA,KAAK,EAAC,aAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAjE,CAFJ,CADJ;AAMH,GAPM,MAOA,IAAID,OAAO,CAACL,KAAR,CAAcO,MAAd,GAAuB,CAA3B,EAA8B;AACjCD,IAAAA,OAAO,gBACH;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,eAEI;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAhC,6BAAiE;AAAG,MAAA,KAAK,EAAC,aAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAjE,CAFJ,CADJ;AAMH,GAPM,MAQF;AACDA,IAAAA,OAAO,GACHD,OAAO,CAACL,KAAR,CACKQ,KADL,CACW,CADX,EAEKC,OAFL,GAGKC,GAHL,CAGSC,IAAI,iBAAI,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAhB;AAAoB,MAAA,IAAI,EAAED,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHjB,CADJ;AAMH;;AAGD,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKL,OADL,CADJ;AAKH,CAjDD;;AAoDA,eAAeZ,YAAf","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useFirestoreConnect } from 'react-redux-firebase'\nimport { Note } from './Note';\nimport { NotesLoader } from '../../Components/Loader/NotesLoader';\n\n\nconst DisplayNotes = () => {\n\n    const userId = useSelector(state => state.firebase.auth.uid);\n    const notes = useSelector(state => state.firestore.data.notes)\n\n    useFirestoreConnect([{\n        collection: 'notes',\n        doc: userId\n    }])\n\n    const myNotes = useSelector(\n        ({ firestore: { data } }) => data.notes && data.notes[userId]\n    )\n\n    let content;\n\n    if (!notes) {\n        content = <NotesLoader />\n\n    } else if (!notes[userId] || !notes[userId].notes) {\n        content =\n            <div className='empty-notes-content'>\n                <h2>You don't have notes..</h2>\n                <h2 className='app-title-empty'><span>Write your</span> SafeNotes<i class=\"fas fa-lock\"></i></h2>\n            </div>\n\n    } else if (myNotes.notes.length < 1) {\n        content =\n            <div className='empty-notes-content'>\n                <h2>You don't have notes..</h2>\n                <h2 className='app-title-empty'><span>Write your</span> SafeNotes<i class=\"fas fa-lock\"></i></h2>\n            </div>\n\n    }\n    else {\n        content = (\n            myNotes.notes\n                .slice(0)\n                .reverse()\n                .map(note => <Note key={note.id} note={note} />)\n        )\n    }\n\n\n    return (\n        <div className='note-content'>\n            {content}\n        </div>\n    )\n}\n\n\nexport default DisplayNotes;"]},"metadata":{},"sourceType":"module"}