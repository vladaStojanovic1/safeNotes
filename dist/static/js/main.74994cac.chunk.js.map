{"version":3,"sources":["images/profile.jpg","images/note-modal2.png","images/pin.png","Components/FormError/FormError.js","Auth/ValidationSchemas/index.js","Components/MessageError/MessageError.js","Components/Loader/LoginLoader.js","Auth/Login/Login.js","store/actions/authAction.js","store/types/index.js","Auth/SignUp/SignUp.js","Components/Navbar/Navbar.js","Auth/Logout/Logout.js","Auth/VerifyEmail/VerifyEmail.js","Components/Modal/Backdrop.js","Components/Modal/Modal.js","Components/Loader/EditProfileLoader.js","Components/Loader/DeleteLoader.js","Auth/UserProfile/UserProfile.js","Auth/Notes/DeleteNote.js","store/actions/noteAction.js","Auth/Notes/Note.js","Components/Loader/NotesLoader.js","Auth/Notes/DisplayNotes.js","Auth/Notes/Notes.js","Routes/routes.js","App.js","store/reducers/authReducer.js","store/reducers/noteReducer.js","store/reducers/index.js","Firebase/Firebase.js","store/index.js","Components/Loader/Loader.js","index.js"],"names":["module","exports","FormError","message","touched","errorStyle","fontSize","color","fontWeight","marginTop","visibility","style","SignUpSchema","Yup","shape","firstName","required","min","max","lastName","email","password","confirmPassword","oneOf","LoginSchema","ProfileSchema","when","is","val","length","then","NotesSchema","note","MessageError","error","className","LoginLoader","class","Login","dispatch","useDispatch","loginAction","useCallback","data","getState","a","getFirebase","firebase","type","auth","signInWithEmailAndPassword","payload","actions","useSelector","state","loading","cleanMessageAction","useEffect","validateOnMount","initialValues","validationSchema","onSubmit","values","setSubmitting","resetForm","errors","isValid","handleSubmit","name","placeholder","disabled","to","SignUp","signUpAction","getFirestore","firestore","console","log","createUserWithEmailAndPassword","res","user","currentUser","sendEmailVerification","collection","doc","uid","set","initials","isSubmitting","Navbar","profile","myImg","cover","src","alt","profilePlaceholder","width","right","pageWrapId","outerContainerId","Logout","logoutAction","signOut","VerifyEmail","sendVerification","verifyEmail","onClick","Backdrop","opened","close","backDropStyle","position","top","left","backgroundColor","height","opacity","transition","zIndex","Modal","children","modalStyle","transform","ReactDOM","createPortal","document","getElementById","EditProfileLoader","DeleteLoader","UserProfile","useState","image","setImage","loadingProfile","profileEdit","editProfileAction","userEmail","userId","storageRef","storage","ref","storageChild","child","put","postCover","getDownloadURL","downloadURL","fileRef","location","path","updateEmail","updatePassword","editProfile","errorEdit","userName","deleteUserAction","delete","loadingDelete","deleteUser","errorDelete","modalOpened","setModalOpened","isLoaded","onChange","e","currentTarget","files","DeleteNote","id","deleteTodoActions","get","previousTodo","notes","newNotes","filter","update","deleteNote","Note","convertDate","moment","date","toDate","fromNow","pin","todo","NotesLoader","DisplayNotes","useFirestoreConnect","content","myNotes","slice","reverse","map","key","Notes","addNoteAction","newNote","Date","valueOf","addNote","notesLength","component","rows","cols","noteModal","Routes","routes","loggedIn","emailVerified","exact","App","initialState","combineReducers","firebaseReducer","firestoreReducer","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","composeEnhancers","compose","store","createStore","rootReducer","reduxFirestore","applyMiddleware","thunk","withExtraArgument","Loader","rrrfProps","config","myFirebase","userProfile","useFirestoreForProfile","createFirestoreInstance","AuthIsLoaded","render","StrictMode"],"mappings":"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","file":"static/js/main.74994cac.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.c3e2f71c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/note-modal2.cf9ec61d.png\";","module.exports = __webpack_public_path__ + \"static/media/pin.ecffbada.png\";","import React from 'react';\n\n\n\nexport const FormError = ({ message, touched }) => {\n    const errorStyle = {\n        fontSize: '10px',\n        color: '#ff6565',\n        fontWeight: 'bold',\n        marginTop: '4px',\n        visibility: message ? 'visible' : 'hidden',\n    }\n\n    if (message && touched) return <p style={errorStyle}>{message}</p>\n\n    return <></>\n}","import * as Yup from 'yup';\n\n\nexport const SignUpSchema = Yup.object().shape({\n    firstName: Yup.string()\n        .required('Name is required.')\n        .min(3, 'To short')\n        .max(25, 'To long.'),\n    lastName: Yup.string()\n        .required('Last name is required.')\n        .min(3, 'To short')\n        .max(25, 'To long.'),\n    email: Yup.string()\n        .email('Invalid email')\n        .required('The email is required'),\n    password: Yup.string()\n        .required('The password is required')\n        .min(8, 'The password is to short'),\n    confirmPassword: Yup.string()\n        .oneOf([Yup.ref('password'), null], `Password doesn't match.`)\n        .required('You need to confirm your password')\n})\n\n\nexport const LoginSchema = Yup.object().shape({\n    email: Yup.string()\n        .email('Invalid email')\n        .required('The email is required'),\n    password: Yup.string()\n        .required('The password is required')\n        .min(8, 'To short..')\n})\n\n\nexport const ProfileSchema = Yup.object().shape({\n    firstName: Yup.string()\n        .required('Your name is required.')\n        .min(3, 'To short')\n        .max(25, 'To long.'),\n    lastName: Yup.string()\n        .required('Your last name is required.')\n        .min(3, 'To short')\n        .max(25, 'To long.'),\n    email: Yup.string()\n        .email('Invalid email')\n        .required('The email is required'),\n    password: Yup.string()\n        .min(8, 'The password is to short'),\n    confirmPassword: Yup.string()\n        .when(\"password\", {\n            is: val => val && val.length > 0,\n            then: Yup.string()\n                .oneOf([Yup.ref(\"password\")], \"Both passwords need to be the same\")\n                .required()\n        }),\n})\n\nexport const NotesSchema = Yup.object().shape({\n    note: Yup.string()\n        .required('The todo is required')\n        .min(4, 'To short.')\n})","import React from 'react';\n\nexport const MessageError = ({ error }) => {\n\n    return <p className='error-message'>{error}</p>\n}\n","import React from 'react'\n\nexport const LoginLoader = () => {\n    return (\n        <div class=\"lds-roller\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\n    )\n}\n","import React, { useCallback, useEffect } from 'react'\nimport { Link } from 'react-router-dom';\nimport { Formik, Field } from 'formik';\nimport * as actions from '../../store/actions/authAction';\nimport { useDispatch, useSelector } from 'react-redux';\n\n/****** Components */\nimport { FormError } from '../../Components/FormError/FormError';\nimport { LoginSchema } from '../ValidationSchemas';\nimport { MessageError } from '../../Components/MessageError/MessageError';\nimport { LoginLoader } from '../../Components/Loader/LoginLoader';\nimport { cleanMessage } from '../../store/actions/authAction';\n\n\nexport const Login = () => {\n\n    const dispatch = useDispatch();\n    const loginAction = useCallback((data) => dispatch(actions.login(data)));\n    const error = useSelector(state => state.auth.error);\n    const loading = useSelector(state => state.auth.loading);\n    const cleanMessageAction = useCallback(() => dispatch(cleanMessage()))\n\n\n    useEffect(() => {\n        return () => {\n            cleanMessageAction()\n        }\n    }, [])\n\n\n    return (\n        <div className='login-content'>\n            <div className=\"login-container\">\n                <div className=\"logo\">\n                    <div className='my-logo-text'>\n                        <h2>Welcome</h2>\n                        <span className='app-title'>SafeNotes</span>\n                        <i class=\"fas fa-lock\"></i>\n                    </div>\n                </div>\n\n                <div className=\"login-form\">\n                    <Formik\n                        validateOnMount={true}\n                        initialValues={{ email: '', password: '' }}\n                        validationSchema={LoginSchema}\n                        onSubmit={(values, { setSubmitting, resetForm }) => {\n                            setSubmitting(true);\n                            loginAction(values);\n                            resetForm();\n                        }}\n                    >\n                        {({ errors, touched, isValid, handleSubmit }) => {\n                            return (\n                                <form className='login-form' onSubmit={handleSubmit}>\n                                    <div className=\"input-group\">\n                                        <i class=\"fas fa-envelope iconEmail\"></i>\n                                        {isValid ? <i class=\"fas fa-check checkIcon\"></i> : null}\n                                        <Field\n                                            className='email-input'\n                                            name='email'\n                                            type=\"email\"\n                                            placeholder='Enter email' />\n                                        <FormError touched={touched.email} message={errors.email} />\n                                    </div>\n                                    <div className=\"input-group\">\n                                        <i class=\"fas fa-key iconPassword\"></i>\n                                        {isValid ? <i class=\"fas fa-check checkIcon\"></i> : null}\n                                        <Field\n                                            className='password-input'\n                                            name='password'\n                                            type=\"password\"\n                                            placeholder='Enter password' />\n                                        <FormError touched={touched.password} message={errors.password} />\n                                    </div>\n                                    <div className=\"input-group\">\n                                        <button\n                                            className='login-btn'\n                                            disabled={!isValid}\n                                            type=\"submit\"\n                                        >\n                                            {!isValid ? <i class=\"fas fa-ban\"></i> : 'Login'}\n\n                                        </button>\n                                        <MessageError error={error} />\n                                    </div>\n                                    {loading ? <LoginLoader /> : null}\n\n                                </form>\n                            )\n                        }}\n                    </Formik>\n                </div>\n\n                <div className=\"register\">\n                    <h3>Have no account on <span className='app-title'>SafeNotes</span> ?</h3>\n                    <Link className='btn-register' to='/signup'>Get registered</Link>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import * as actions from '../types';\n\n/*********  Sign Up action */\nexport const signUp = data => async (dispatch, getState, { getFirebase, getFirestore }) => {\n\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n\n    dispatch({ type: actions.AUTH_START });\n    console.log(firebase);\n\n    try {\n        const res = await firebase\n            .auth()\n            .createUserWithEmailAndPassword(data.email, data.password)\n\n        /*** Send the verification email */\n        const user = firebase.auth().currentUser;\n        await user.sendEmailVerification();\n\n        await firestore\n            .collection('users')\n            .doc(res.user.uid)\n            .set({\n                firstName: data.firstName,\n                lastName: data.lastName,\n                initials: `${data.firstName[0]}${data.lastName[0]}`\n            })\n        dispatch({ type: actions.AUTH_SUCCESS });\n\n    } catch (error) {\n        dispatch({ type: actions.AUTH_FAIL, payload: error.message })\n    }\n    dispatch({ type: actions.AUTH_END })\n}\n\n\n/*********** Logout Action */\nexport const logout = () => async (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n\n    try {\n        await firebase.auth().signOut();\n    } catch (error) {\n        console.log(error.message);\n    }\n    dispatch({ type: actions.AUTH_END })\n}\n\n\n/******** Login Action */\nexport const login = (data) => async (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n    dispatch({ type: actions.AUTH_START })\n    try {\n        await firebase\n            .auth()\n            .signInWithEmailAndPassword(data.email, data.password)\n\n        dispatch({ type: actions.AUTH_SUCCESS })\n    } catch (error) {\n        dispatch({ type: actions.AUTH_FAIL, payload: error.message })\n    }\n}\n\n\n/******** Verify Email Action */\nexport const verifyEmail = () => async (dispatch, getState, { getFirebase }) => {\n\n    const firebase = getFirebase();\n    dispatch({ type: actions.VERIFY_START });\n    try {\n        const user = firebase.auth().currentUser;\n        await user.sendEmailVerification();\n        dispatch({ type: actions.VERIFY_SUCCESS });\n    } catch (error) {\n        dispatch({ type: actions.VERIFY_FAIL, payload: error.message });\n    }\n}\n\n\n/********* Edit Profile Action */\nexport const editProfile = (data, image) => async (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n    const userEmail = getState().firebase.auth.email;\n    const user = firebase.auth().currentUser;\n    const userId = getState().firebase.auth.uid;\n\n    dispatch({ type: actions.PROFILE_START })\n    try {\n\n        if (image) {\n            const storageRef = firebase.storage().ref();\n            const storageChild = storageRef.child(image.name);\n            const postCover = await storageChild.put(image);\n            const downloadURL = await storageChild.getDownloadURL();\n            const fileRef = postCover.ref.location.path;\n\n            await firestore\n                .collection('users')\n                .doc(userId)\n                .set({\n                    firstName: data.firstName,\n                    lastName: data.lastName,\n                    cover: downloadURL,\n                    fileRef: fileRef,\n                    initials: `${data.firstName[0]}${data.lastName[0]}`\n                })\n        } else {\n            await firestore\n                .collection('users')\n                .doc(userId)\n                .set({\n                    firstName: data.firstName,\n                    lastName: data.lastName,\n                    initials: `${data.firstName[0]}${data.lastName[0]}`\n                })\n        }\n        // Update email\n        if (data.email !== userEmail) {\n\n            await user.updateEmail(data.email)\n        }\n\n\n        // Update Password\n        if (data.password.length > 0) {\n            console.log('update pass');\n            await user.updatePassword(data.password)\n        }\n\n        dispatch({ type: actions.PROFILE_SUCCESS })\n    } catch (error) {\n        dispatch({ type: actions.PROFILE_FAIL, payload: error.message })\n    }\n}\n\n\n\n/*********** Delete Profile Action */\nexport const deleteUserProfile = () => async (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n    const user = firebase.auth().currentUser;\n    const userId = getState().firebase.auth.uid;\n\n    dispatch({ type: actions.DELETE_USER_START });\n\n    try {\n        await firestore\n            .collection('users')\n            .doc(userId)\n            .delete()\n\n        await firestore\n            .collection('notes')\n            .doc(userId)\n            .delete()\n\n        await user.delete();\n\n    } catch (error) {\n        dispatch({ type: actions.DELETE_USER_FAIL, payload: error.message });\n    }\n}\n\n\n\n/********** Clean message */\nexport const cleanMessage = () => {\n    return { type: actions.CLEAN_UP }\n}","export const AUTH_START = 'AUTH_START';\nexport const AUTH_END = 'AUTH_END';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\n\nexport const VERIFY_START = 'VERIFY_START';\nexport const VERIFY_SUCCESS = 'VERIFY_SUCCESS';\nexport const VERIFY_FAIL = 'VERIFY_FAIL';\n\nexport const PROFILE_START = 'PROFILE_START';\nexport const PROFILE_SUCCESS = 'PROFILE_SUCCESS';\nexport const PROFILE_FAIL = 'PROFILE_FAIL';\n\nexport const DELETE_USER_START = 'DELETE_USER_START';\nexport const DELETE_USER_FAIL = 'DELETE_USER_FAIL';\n\nexport const CLEAN_UP = 'CLEAN_UP';\n\nexport const ADD_NOTE_START = 'ADD_NOTE_START';\nexport const ADD_NOTE_SUCCESS = 'ADD_NOTE_SUCCESS';\nexport const ADD_NOTE_FAIL = 'ADD_NOTE_FAIL';\n\n\nexport const DELETE_NOTE_START = 'DELETE_NOTE_START';\nexport const DELETE_NOTE_SUCCESS = 'DELETE_NOTE_SUCCESS';\nexport const DELETE_NOTE_FAIL = 'DELETE_NOTE_FAIL';","import React, { useCallback, useEffect } from 'react'\nimport { Link } from 'react-router-dom';\nimport { Formik, Field } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as actions from '../../store/actions/authAction';\n\n// Components\nimport { SignUpSchema } from '../ValidationSchemas';\nimport { FormError } from '../../Components/FormError/FormError';\nimport { MessageError } from '../../Components/MessageError/MessageError';\nimport { LoginLoader } from '../../Components/Loader/LoginLoader';\n\nexport const SignUp = () => {\n\n    const dispatch = useDispatch();\n    const signUpAction = useCallback((data) => dispatch(actions.signUp(data)));\n    const error = useSelector(state => state.auth.error);\n    const loading = useSelector(state => state.auth.loading);\n    const cleanMessageAction = useCallback(() => dispatch(actions.cleanMessage()))\n\n\n    useEffect(() => {\n        return () => {\n            cleanMessageAction()\n        }\n    }, [])\n\n\n    return (\n        <div className='signup-content'>\n            <div className=\"register-container\">\n                <div className=\"title-register\">\n                    <p>Come join our <span className='app-title'>SafeNotes<i class=\"fas fa-lock\"></i></span> app!<br /> Let's set up your account</p>\n\n                </div>\n                <div className=\"register-form\">\n                    <Formik\n                        initialValues={{\n                            firstName: '',\n                            lastName: '',\n                            email: '',\n                            password: '',\n                            confirmPassword: ''\n                        }}\n                        validateOnMount={true}\n                        validationSchema={SignUpSchema}\n                        onSubmit={(values, { setSubmitting, resetForm }) => {\n                            signUpAction(values);\n                        }}\n                    >\n                        {({ isSubmitting, errors, touched, isValid, handleSubmit }) => (\n                            <form onSubmit={handleSubmit}>\n                                <div className=\"first-last-name\">\n                                    <div className=\"input-group\">\n                                        <i class=\"fas fa-user\"></i>\n                                        {isValid ? <i class=\"fas fa-check checkIcon-name\"></i> : null}\n                                        <Field\n                                            className='firstName'\n                                            type='text'\n                                            name='firstName'\n                                            placeholder='First name...' />\n                                        <FormError touched={touched.firstName} message={errors.firstName} />\n                                    </div>\n                                    <div className=\"input-group\">\n                                        <i class=\"fas fa-user\"></i>\n                                        {isValid ? <i class=\"fas fa-check checkIcon-name\"></i> : null}\n                                        <Field\n                                            className='lastName'\n                                            type='text'\n                                            name='lastName'\n                                            placeholder='Last name...' />\n                                        <FormError touched={touched.lastName} message={errors.lastName} />\n                                    </div>\n                                </div>\n                                <div className=\"input-group\">\n                                    <i class=\"fas fa-envelope iconEmail\"></i>\n                                    {isValid ? <i class=\"fas fa-check checkIcon-rest\"></i> : null}\n                                    <Field\n                                        className='email-register'\n                                        name='email'\n                                        type=\"email\"\n                                        placeholder='Email' />\n                                    <FormError touched={touched.email} message={errors.email} />\n                                </div>\n                                <div className=\"input-group\">\n                                    <i class=\"fas fa-key iconPassword\"></i>\n                                    {isValid ? <i class=\"fas fa-check checkIcon-rest\"></i> : null}\n                                    <Field\n                                        className='password-register'\n                                        name='password'\n                                        type=\"password\"\n                                        placeholder='Password' />\n                                    <FormError touched={touched.password} message={errors.password} />\n                                </div>\n                                <div className=\"input-group\">\n                                    <i class=\"fas fa-unlock-alt iconPassword\"></i>\n                                    {isValid ? <i class=\"fas fa-check checkIcon-rest\"></i> : null}\n                                    <Field\n                                        className='confirm-password'\n                                        type='password'\n                                        name='confirmPassword'\n                                        placeholder='Re-type your password...'\n                                    />\n                                    <FormError touched={touched.confirmPassword} message={errors.confirmPassword} />\n                                </div>\n                                <div className=\"input-group btn-reg\">\n                                    <button\n                                        className='register-btn'\n                                        disabled={!isValid}\n                                        type=\"submit\">\n                                        {!isValid ? <i class=\"fas fa-ban\"></i> : 'Join'}\n                                    </button>\n                                    <MessageError error={error} />\n                                </div>\n                                {loading ? <LoginLoader /> : null}\n\n                            </form>\n                        )}\n                    </Formik>\n                </div>\n\n                <div className=\"back-to-login\">\n                    <p>Already have an account?</p>&nbsp;\n                    <Link to='/'>Login here</Link>\n                </div>\n\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\n// Components\nimport profilePlaceholder from '../../images/profile.jpg';\nimport { slide as Menu } from 'react-burger-menu';\n\n\nexport const Navbar = () => {\n\n    const firstName = useSelector(state => state.firebase.profile.firstName);\n    const myImg = useSelector(state => state.firebase.profile.cover)\n\n\n\n    return (\n        <>\n            <div className='navbar-container'>\n                <div className=\"navbar-content\">\n\n                    <div className='logo-container'>\n                        <p>HI! <span className='name-logo'>{firstName}</span> welcome on</p>\n                        <h1>safeNotes<i class=\"fas fa-lock\"></i></h1>\n                    </div>\n\n                    <div className=\"links\">\n                        <NavLink className='nav-link hvr-icon-buzz-out' to='/profile'>\n                            {!myImg\n                                ? <img className='nav-profile-image hvr-icon' src={profilePlaceholder} alt=\"profileImage\" />\n                                : <img className='nav-profile-image hvr-icon' src={myImg} alt=\"profileImage\" />}\n\n                        </NavLink>\n                        <NavLink className='nav-link hvr-grow-rotate' to='/'>Notes</NavLink>\n                        <NavLink className='nav-link logout hvr-icon-pulse' to='/logout'>Logout<i class=\"fas fa-sign-out-alt hvr-icon\"></i></NavLink>\n                    </div>\n                </div>\n            </div>\n\n\n            {/* Burger menu */}\n            <div className=\"outer-container\">\n                <Menu\n                    width={180}\n                    right\n                    pageWrapId={'page-wrap'}\n                    outerContainerId={'outer-container'}\n                >\n                    <p>Hi! {firstName}</p>\n                    <NavLink className='nav-link hvr-icon-buzz-out' to='/profile'>\n                        {!myImg\n                            ? <img className='nav-profile-image hvr-icon' src={profilePlaceholder} alt=\"profileImage\" />\n                            : <img className='nav-profile-image hvr-icon' src={myImg} alt=\"profileImage\" />}\n\n                    </NavLink>\n                    <NavLink className='nav-link hvr-grow-rotate' to='/'>Notes</NavLink>\n                    <NavLink className='nav-link logout hvr-icon-pulse' to='/logout'>Logout <i class=\"fas fa-sign-out-alt hvr-icon\"></i></NavLink>\n                </Menu>\n            </div>\n\n        </>\n    )\n}\n","import { useEffect, useCallback } from 'react'\nimport { useDispatch } from 'react-redux';\nimport { logout } from '../../store/actions/authAction';\n\nexport const Logout = () => {\n\n    const dispatch = useDispatch();\n    const logoutAction = useCallback(() => dispatch(logout()))\n\n    useEffect(() => {\n        logoutAction()\n    }, [logoutAction])\n\n    return null;\n}\n","import React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { verifyEmail } from '../../store/actions/authAction';\nimport { MessageError } from '../../Components/MessageError/MessageError';\n\nexport const VerifyEmail = () => {\n\n    const dispatch = useDispatch();\n    const sendVerification = useCallback(() => dispatch(verifyEmail()));\n    const error = useSelector(state => state.auth.verifyEmail.error);\n    const firstName = useSelector(state => state.firebase.profile.firstName);\n    const email = useSelector(state => state.firebase.auth.email);\n\n\n\n    return (\n        <div className='verify-content'>\n            <div className=\"verify-container\">\n                <p className='text-verify'>\n                    <span className='user-info'>{firstName} </span>\n                 thank you for joining us! We just need you to verify your\n                 <span className='user-info-email'> {email} </span>\n                 address to complete setting up your account and begin to write your\n                 <span className='app-title'> SafeNotes<i class=\"fas fa-lock\"></i></span></p>\n                <button onClick={sendVerification}>\n                    Re-send verification email &nbsp;\n                <i class=\"fas fa-paper-plane\"></i>\n                </button>\n                <MessageError error={error} />\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport const Backdrop = ({ opened, close }) => {\n\n\n    const backDropStyle = {\n        position: 'fixed',\n        top: '0',\n        left: '0',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        width: '100%',\n        height: '100vh',\n        opacity: opened ? '1' : '0',\n        visibility: opened ? 'visible' : 'hidden',\n        transition: 'all 0.4s',\n        zIndex: '1500',\n    }\n\n    return (\n        <div onClick={close} style={backDropStyle}>\n\n        </div>\n    )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom';\nimport { Backdrop } from './Backdrop';\n\n\nexport const Modal = ({ children, opened, close }) => {\n\n\n    const modalStyle = {\n        visibility: opened ? 'visible' : 'hidden',\n        transform: opened ? 'translate(-50%, -50%)' : 'translate(-50%, -150%)',\n        opacity: opened ? '1' : '0',\n    }\n\n    return ReactDOM.createPortal(\n        <>\n            <Backdrop opened={opened} close={close} />\n            <div style={modalStyle} className='my-modal'>\n                {children}\n            </div>\n        </>, document.getElementById('root-modal')\n    )\n}\n","import React from 'react'\n\nexport const EditProfileLoader = () => {\n    return (\n        <div class=\"lds-facebook\"><div></div><div></div><div></div></div>\n    )\n}\n","import React from 'react'\n\nexport const DeleteLoader = () => {\n    return (\n        <div class=\"lds-spinner\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\n    )\n}\n","import React, { useState, useCallback, useEffect } from 'react';\nimport { Formik, Field } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\n\n// Components\nimport { ProfileSchema } from '../ValidationSchemas/';\nimport { FormError } from '../../Components/FormError/FormError';\nimport { editProfile } from '../../store/actions/authAction';\nimport { Modal } from '../../Components/Modal/Modal';\nimport { deleteUserProfile } from '../../store/actions/authAction';\nimport { MessageError } from '../../Components/MessageError/MessageError';\nimport profilePlaceholder from '../../images/profile.jpg';\nimport { EditProfileLoader } from '../../Components/Loader/EditProfileLoader';\nimport { DeleteLoader } from '../../Components/Loader/DeleteLoader';\nimport { cleanMessage } from '../../store/actions/authAction';\n\nexport const UserProfile = () => {\n\n    const firebase = useSelector(state => state.firebase);\n    const [image, setImage] = useState(null);\n\n    const dispatch = useDispatch();\n    const myImg = useSelector(state => state.firebase.profile.cover)\n    const loadingProfile = useSelector(state => state.auth.profileEdit.loading);\n\n    // Edit Profile\n    const editProfileAction = useCallback((values, image) => dispatch(editProfile(values, image)))\n    const errorEdit = useSelector(state => state.auth.profileEdit.error);\n    const userName = useSelector(state => state.firebase.profile.firstName);\n\n    // Delete Profile\n    const deleteUserAction = useCallback(() => dispatch(deleteUserProfile()));\n    const loadingDelete = useSelector(state => state.auth.deleteUser.loading);\n    const errorDelete = useSelector(state => state.auth.deleteUser.error);\n    const cleanMessageAction = useCallback(() => dispatch(cleanMessage()));\n\n    const [modalOpened, setModalOpened] = useState(false);\n\n\n    useEffect(() => {\n        return () => {\n            cleanMessageAction()\n        }\n    }, [])\n\n    if (!firebase.profile.isLoaded) return null;\n\n    return (\n        <div className='profile-content'>\n            <div className=\"profile-container\">\n                <div className=\"title-edit\">\n                    <p>HI {userName}, here you can edit your profile</p>\n                </div>\n\n                {loadingProfile ? <EditProfileLoader /> :\n                    <div className=\"image-title\">\n\n                        <div className=\"image-upload\">\n                            {!myImg\n                                ? <img className='profile-image' src={profilePlaceholder} alt=\"profileImage\" />\n                                : <img className='profile-image' src={myImg} alt=\"profileImage\" />}\n                        </div>\n\n                        <div className=\"input-group fileUpload\">\n                            <input\n                                className='upload'\n                                type=\"file\"\n                                onChange={(e) => setImage(e.currentTarget.files[0])} />\n                            <span><i class=\"fas fa-camera\"></i></span>\n                        </div>\n                    </div>}\n\n                <Formik\n                    initialValues={{\n                        firstName: firebase.profile.firstName,\n                        lastName: firebase.profile.lastName,\n                        email: firebase.auth.email,\n                        password: '',\n                        confirmPassword: ''\n                    }}\n                    validateOnMount={true}\n                    validationSchema={ProfileSchema}\n                    onSubmit={(values, { setSubmitting, resetForm }) => {\n                        editProfileAction(values, image)\n                    }}\n                >\n                    {({ errors, values, touched, isValid, handleSubmit }) => (\n                        <form onSubmit={handleSubmit}>\n                            <div className=\"first-last-name\">\n                                <div className=\"input-group\">\n                                    <i class=\"fas fa-user\"></i>\n                                    {isValid ? <i class=\"fas fa-check checkIcon-name\"></i> : null}\n                                    <Field\n                                        className='firstName'\n                                        type='text'\n                                        name='firstName'\n                                        placeholder='First name...' />\n                                    <FormError touched={touched.firstName} message={errors.firstName} />\n                                </div>\n                                <div className=\"input-group\">\n                                    <i class=\"fas fa-user\"></i>\n                                    {isValid ? <i class=\"fas fa-check checkIcon-name\"></i> : null}\n                                    <Field\n                                        className='lastName'\n                                        type='text'\n                                        name='lastName'\n                                        placeholder='Last name...' />\n                                    <FormError touched={touched.lastName} message={errors.lastName} />\n                                </div>\n                            </div>\n                            <div className=\"input-group\">\n                                <i class=\"fas fa-envelope iconEmail\"></i>\n                                {isValid ? <i class=\"fas fa-check checkIcon-rest\"></i> : null}\n                                <Field\n                                    className='email-register'\n                                    name='email'\n                                    type=\"email\"\n                                    placeholder='Email' />\n                                <FormError touched={touched.email} message={errors.email} />\n                            </div>\n                            <div className=\"input-group\">\n                                <i class=\"fas fa-key iconPassword\"></i>\n                                {values.password.length > 8 ? <i class=\"fas fa-check checkIcon-rest\"></i> : null}\n\n                                <Field\n                                    className='password-register'\n                                    name='password'\n                                    type=\"password\"\n                                    placeholder='New password' />\n                                <FormError touched={touched.password} message={errors.password} />\n                            </div>\n                            <div className=\"input-group\">\n                                <i class=\"fas fa-unlock-alt iconPassword\"></i>\n                                {values.password.length > 8 ? <i class=\"fas fa-check checkIcon-rest\"></i> : null}\n\n                                <Field\n                                    className='confirm-password'\n                                    type='password'\n                                    name='confirmPassword'\n                                    placeholder='Re-type your new password...'\n                                />\n                                <FormError touched={touched.confirmPassword} message={errors.confirmPassword} />\n                            </div>\n                            <div className=\"input-group btn-reg\">\n                                <button\n                                    className='edit-btn'\n                                    disabled={!isValid}\n                                    type=\"submit\">\n                                    Edit profile\n                                </button>\n                                <MessageError error={errorEdit} />\n                            </div>\n\n                            <div className=\"input-group\">\n                                <button\n                                    type='button'\n                                    className='delete-btn'\n                                    onClick={() => setModalOpened(true)}>\n                                    Delete account &nbsp; <i className=\"fas fa-trash \"></i>\n                                </button>\n                            </div>\n                        </form>\n                    )}\n                </Formik>\n\n\n                {/* Modal */}\n                <Modal\n                    close={() => setModalOpened(false)}\n                    opened={modalOpened}\n                >\n                    <h2 className='delete-title'>Delete your account</h2>\n                    <p className='delete-text'><span className='username-modal'>{userName}</span> do you really want to delete your account?</p>\n\n                    {loadingDelete ? <DeleteLoader /> :\n                        <div className='delete-btn-div'>\n                            <button\n                                onClick={deleteUserAction}\n                                type='button'\n                                loading={loadingDelete ? 'Deleting...' : null}\n                                className='delete-btn modal-delete'>\n                                Delete account &nbsp; <i class=\"fas fa-trash\"></i>\n                            </button>\n\n                            <button\n                                type='button'\n                                className='cancel-btn'\n                                onClick={() => setModalOpened(false)}>\n                                Cancel\n                        </button>\n                            <MessageError error={errorDelete} />\n                        </div>}\n                </Modal>\n\n            </div>\n        </div>\n    )\n}\n","import React, { useCallback } from 'react'\nimport { Modal } from '../../Components/Modal/Modal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteNote } from '../../store/actions/noteAction';\nimport { MessageError } from '../../Components/MessageError/MessageError';\n\n\nexport const DeleteNote = ({ close, opened, id }) => {\n\n    const dispatch = useDispatch()\n    const deleteTodoActions = useCallback((id) => dispatch(deleteNote(id)));\n    const error = useSelector(state => state.notes.deleteNote.error);\n    const loading = useSelector(state => state.notes.deleteNote.loading);\n\n\n\n    return (\n        <Modal\n            close={close}\n            opened={opened}>\n\n            <p className='note-delete-text'>Are you sure you want to delete note?</p>\n            <div className='note-delete-div'>\n                <button\n                    onClick={() => deleteTodoActions(id)}\n                    type='button'\n                    className='delete-btn modal-delete'>\n                    {loading ? <span>Deleting</span> : <span>Delete note&nbsp; <i class=\"fas fa-trash\"></i></span>}\n                </button>\n\n                <button\n                    onClick={close}\n                    type='button'\n                    className='cancel-btn'>\n                    Cancel\n                </button>\n            </div>\n            <MessageError error={error} />\n        </Modal>\n    )\n}\n","import * as actions from '../types';\n\n/********* Add Note */\nexport const addNote = (data) => async (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firestore = getFirestore();\n    const userId = getState().firebase.auth.uid;\n    const firebase = getFirebase();\n\n    dispatch({ type: actions.ADD_NOTE_START });\n\n    try {\n        const res = await firestore\n            .collection('notes')\n            .doc(userId)\n            .get();\n\n        const newNote = {\n            id: new Date().valueOf(),\n            todo: data.note,\n            date: new Date()\n        }\n\n        if (!res.data()) {\n            // If user not have note\n            firestore\n                .collection('notes')\n                .doc(userId)\n                .set({\n                    notes: [newNote]\n                })\n        } else {\n            //if user have note\n            firestore\n                .collection('notes')\n                .doc(userId)\n                .update({\n                    notes: [...res.data().notes, newNote]\n                })\n        }\n        dispatch({ type: actions.ADD_NOTE_SUCCESS });\n        // return true;\n\n    } catch (error) {\n        console.log(error.message);\n\n        dispatch({ type: actions.ADD_NOTE_FAIL, payload: error.message });\n    }\n}\n\n\n\n/******** Delete Note */\nexport const deleteNote = id => async (dispatch, getState, { getFirestore }) => {\n    const firestore = getFirestore();\n    const userId = getState().firebase.auth.uid;\n\n    dispatch({ type: actions.DELETE_NOTE_START });\n    try {\n        const res = await firestore\n            .collection('notes')\n            .doc(userId)\n            .get();\n\n        const previousTodo = res.data().notes;\n        // filter old notes and return new arr\n        const newNotes = previousTodo.filter(note => note.id !== id);\n\n        await firestore\n            .collection('notes')\n            .doc(userId)\n            .update({\n                notes: newNotes\n            })\n        dispatch({ type: actions.DELETE_NOTE_SUCCESS });\n    } catch (error) {\n        dispatch({ type: actions.DELETE_NOTE_FAIL, payload: error.message });\n    }\n}","import React, { useState } from 'react';\nimport pin from '../../images/pin.png';\nimport moment from 'moment';\nimport { DeleteNote } from './DeleteNote';\n\nexport const Note = ({ note }) => {\n\n    const convertDate = moment(note.date.toDate()).fromNow();\n    const [modalOpened, setModalOpened] = useState(false);\n\n    return (\n        <>\n            <div className='note-card'>\n                <img className='note-ui' src={pin} alt=\"noteUi\" />\n                <p>{note.todo}</p>\n\n                <div className='note-date'>\n                    <i class=\"far fa-clock\"></i>\n                    <p>{convertDate}</p>\n                </div>\n                <i onClick={() => setModalOpened(true)} class=\"fas fa-trash-alt hvr-grow-rotate\"></i>\n            </div>\n\n            <DeleteNote\n                id={note.id}\n                close={() => setModalOpened(false)}\n                opened={modalOpened} />\n        </>\n    )\n}\n","import React from 'react'\n\nexport const NotesLoader = () => {\n    return (\n        <div class=\"lds-ripplee\"><div></div><div></div></div>\n    )\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useFirestoreConnect } from 'react-redux-firebase'\nimport { Note } from './Note';\nimport { NotesLoader } from '../../Components/Loader/NotesLoader';\n\n\nconst DisplayNotes = () => {\n\n    const userId = useSelector(state => state.firebase.auth.uid);\n    const notes = useSelector(state => state.firestore.data.notes)\n\n    useFirestoreConnect([{\n        collection: 'notes',\n        doc: userId\n    }])\n\n    const myNotes = useSelector(\n        ({ firestore: { data } }) => data.notes && data.notes[userId]\n    )\n\n    let content;\n\n    if (!notes) {\n        content = <NotesLoader />\n\n    } else if (!notes[userId] || !notes[userId].notes) {\n        content =\n            <div className='empty-notes-content'>\n                <h2>You don't have notes..</h2>\n                <h2 className='app-title-empty'><span>Write your</span> SafeNotes<i class=\"fas fa-lock\"></i></h2>\n            </div>\n\n    } else if (myNotes.notes.length < 1) {\n        content =\n            <div className='empty-notes-content'>\n                <h2>You don't have notes..</h2>\n                <h2 className='app-title-empty'><span>Write your</span> SafeNotes<i class=\"fas fa-lock\"></i></h2>\n            </div>\n\n    }\n    else {\n        content = (\n            myNotes.notes\n                .slice(0)\n                .reverse()\n                .map(note => <Note key={note.id} note={note} />)\n        )\n    }\n\n\n    return (\n        <div className='note-content'>\n            {content}\n        </div>\n    )\n}\n\n\nexport default DisplayNotes;","import React, { useState, useCallback } from 'react';\nimport { Formik, Field } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useFirestoreConnect } from 'react-redux-firebase'\n\n// Components\nimport { Modal } from '../../Components/Modal/Modal';\nimport { NotesSchema } from '../ValidationSchemas';\nimport { FormError } from '../../Components/FormError/FormError';\nimport noteModal from '../../images/note-modal2.png';\nimport { addNote } from '../../store/actions/noteAction';\nimport { MessageError } from '../../Components/MessageError/MessageError';\nimport DisplayNotes from './DisplayNotes';\n\nexport const Notes = () => {\n\n    const [modalOpened, setModalOpened] = useState(false);\n    const dispatch = useDispatch();\n    const addNoteAction = useCallback((data) => dispatch(addNote(data)));\n    const error = useSelector(state => state.notes.error);\n    const userId = useSelector(state => state.firebase.auth.uid);\n    const userName = useSelector(state => state.firebase.profile.firstName);\n\n    useFirestoreConnect([{\n        collection: 'notes',\n        doc: userId\n    }])\n\n    const myNotes = useSelector(\n        ({ firestore: { data } }) => data.notes && data.notes[userId]\n    )\n    const notesLength = myNotes ? myNotes.notes.length : '0';\n\n    return (\n        <div className='notes-content'>\n\n            <div className='notes-title'>\n                <div>\n                    <h2>Your Notes</h2>\n                    <p>{userName} you have {notesLength} notes from now...</p>\n                </div>\n\n                <i onClick={() => setModalOpened(true)}\n                    class=\"fas fa-plus-circle hvr-pop\"></i>\n            </div>\n\n            <Modal\n                close={() => setModalOpened(false)}\n                opened={modalOpened}\n            >\n\n                <Formik initialValues={{\n                    note: ''\n                }}\n                    validationSchema={NotesSchema}\n                    validateOnMount={true}\n                    onSubmit={async (values, { resetForm, setSubmitting }) => {\n                        await addNoteAction(values);\n                        setModalOpened(false)\n                        setSubmitting(false)\n                        resetForm();\n                    }}>\n\n                    {({ isSubmitting, touched, isValid, resetForm, onSubmit, errors, handleSubmit }) => (\n                        <form className='note-form' onSubmit={handleSubmit}>\n\n                            <div className=\"input-group\">\n                                <Field\n                                    component=\"textarea\" rows=\"14\" cols=\"20\"\n                                    type='text'\n                                    name='note'\n                                    placeholder='Add your new note...'\n                                    className='note-input'\n                                />\n                                <FormError touched={touched.note} message={errors.note} />\n\n                            </div>\n\n                            <div className=\"note-btn-div\">\n                                <div className=\"input-group\">\n                                    <button\n                                        disabled={!isValid}\n                                        className='modal-add-note-btn'\n                                        type='submit'>\n                                        Add note\n                                </button>\n                                </div>\n\n                            </div>\n                            <div className=\"x-modal-btn\">\n                                <button\n\n                                    type='button'\n                                    onClick={() => {\n                                        setModalOpened(false);\n                                        resetForm();\n                                    }}>\n                                    <i class=\"far fa-times-circle\"></i>\n                                </button>\n                            </div>\n\n                        </form>\n                    )}\n\n                </Formik>\n\n                <img className='note-modal' src={noteModal} alt=\"\" />\n                <MessageError error={error} />\n            </Modal>\n\n            <DisplayNotes />\n        </div>\n    )\n}\n","import React from 'react'\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\n/****** Components */\nimport { Login } from '../Auth/Login/Login';\nimport { SignUp } from '../Auth/SignUp/SignUp';\nimport { Navbar } from '../Components/Navbar/Navbar';\nimport { Logout } from '../Auth/Logout/Logout';\nimport { VerifyEmail } from '../Auth/VerifyEmail/VerifyEmail';\nimport { UserProfile } from '../Auth/UserProfile/UserProfile';\nimport { Notes } from '../Auth/Notes/Notes';\n\n\n\nexport const Routes = () => {\n    const loggedIn = useSelector(state => state.firebase.auth.uid)\n    const emailVerified = useSelector(state => state.firebase.auth.emailVerified);\n\n    let routes;\n\n    // when user logged in but not verified\n    if (loggedIn && !emailVerified) {\n        routes = (\n            <Switch>\n                <Route exact path='/' component={VerifyEmail} />\n                <Route path='/navbar' component={Navbar} />\n                <Route path='/logout' component={Logout} />\n                <Route path='/profile' component={UserProfile} />\n                <Redirect to='/' />\n            </Switch>\n        )\n\n        // when user logged in and verified\n    } else if (loggedIn && emailVerified) {\n        routes = (\n            <Switch>\n                <Route exact path='/' component={Notes} />\n                <Route path='/logout' component={Logout} />\n                <Route exact path='/profile' component={UserProfile} />\n\n            </Switch>\n        )\n\n    } else {\n        routes = (\n            <Switch>\n                <Route exact path='/' component={Login} />\n                <Route exact path='/signup' component={SignUp} />\n                <Redirect to='/' />\n            </Switch>\n        )\n    }\n\n    return (\n        <div className={loggedIn ? 'loggedIn-content' : null}>\n            {loggedIn ? <Navbar /> : null}\n            {routes}\n        </div>\n    )\n}\n","import React from 'react';\nimport './styles/styles.css';\nimport { Routes } from './Routes/routes';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routes />\n    </div>\n  );\n}\n\nexport default App;\n","import * as actions from '../types'\n\nconst initialState = {\n    error: null,\n    loading: false,\n    verifyEmail: {\n        error: null,\n        loading: false\n    },\n    profileEdit: {\n        error: null,\n        loading: false\n    },\n    deleteUser: {\n        error: null,\n        loading: false\n    }\n\n}\n\nexport default (state = initialState, { type, payload }) => {\n    switch (type) {\n        case actions.AUTH_START:\n            return {\n                ...state,\n                loading: true\n            }\n        case actions.AUTH_SUCCESS:\n            return {\n                ...state,\n                error: false,\n                loading: false\n            }\n        case actions.AUTH_FAIL:\n            return {\n                ...state,\n                error: payload,\n                loading: false\n            }\n        case actions.AUTH_END:\n            return {\n                ...state,\n                loading: false\n            }\n        case actions.VERIFY_START:\n            return {\n                ...state,\n                verifyEmail: {\n                    ...state.verifyEmail,\n                    loading: true\n                }\n\n            }\n        case actions.VERIFY_SUCCESS:\n            return {\n                ...state,\n                verifyEmail: {\n                    ...state.verifyEmail,\n                    error: false,\n                    loading: false\n                }\n            }\n        case actions.VERIFY_FAIL:\n            return {\n                ...state,\n                verifyEmail: {\n                    ...state.verifyEmail,\n                    error: payload,\n                    loading: false\n                }\n            }\n        case actions.PROFILE_START:\n            return {\n                ...state,\n                profileEdit: {\n                    ...state.profileEdit,\n                    loading: true\n                }\n            }\n        case actions.PROFILE_SUCCESS:\n            return {\n                ...state,\n                profileEdit: {\n                    ...state.profileEdit,\n                    error: false,\n                    loading: false\n                }\n            }\n        case actions.PROFILE_FAIL:\n            return {\n                ...state,\n                profileEdit: {\n                    ...state.profileEdit,\n                    error: payload,\n                    loading: false\n                }\n            }\n        case actions.DELETE_USER_START:\n            return {\n                ...state,\n                deleteUser: {\n                    ...state.deleteUser,\n                    error: false,\n                    loading: true\n                }\n            }\n        case actions.DELETE_USER_FAIL:\n            return {\n                ...state,\n                deleteUser: {\n                    ...state.deleteUser,\n                    error: payload,\n                    loading: false\n                }\n            }\n        case actions.CLEAN_UP:\n            return {\n                ...state,\n                error: null,\n                loading: false,\n                verifyEmail: {\n                    ...state.verifyEmail,\n                    error: null,\n                    loading: false\n                },\n                profileEdit: {\n                    ...state.profileEdit,\n                    error: null,\n                    loading: false\n                },\n                deleteUser: {\n                    ...state.deleteUser,\n                    error: null,\n                    loading: false\n                },\n            }\n\n        default:\n            return state;\n    }\n}","import * as actions from '../types';\n\nconst initialState = {\n    error: null,\n    loading: false,\n    deleteNote: {\n        error: null,\n        loading: false\n    }\n}\n\n\nexport default (state = initialState, { type, payload }) => {\n    switch (type) {\n        case actions.ADD_NOTE_START:\n            return {\n                ...state,\n                loading: true,\n            }\n        case actions.ADD_NOTE_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                error: false\n            }\n        case actions.ADD_NOTE_FAIL:\n            return {\n                ...state,\n                loading: false,\n                error: payload\n            }\n        case actions.DELETE_NOTE_START:\n            return {\n                ...state,\n                deleteNote: {\n                    ...state.deleteNote,\n                    loading: true\n                }\n            }\n        case actions.DELETE_NOTE_SUCCESS:\n            return {\n                ...state,\n                deleteNote: {\n                    ...state.deleteNote,\n                    loading: false,\n                    error: false\n                }\n            }\n        case actions.DELETE_NOTE_FAIL:\n            return {\n                ...state,\n                deleteNote: {\n                    ...state.deleteNote,\n                    loading: false,\n                    error: payload\n                }\n            }\n\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport authReducer from './authReducer';\nimport { firebaseReducer } from 'react-redux-firebase';\nimport { firestoreReducer } from 'redux-firestore';\nimport notesReducer from '../reducers/noteReducer';\n\n\nexport default combineReducers({\n    auth: authReducer,\n    notes: notesReducer,\n    firebase: firebaseReducer,\n    firestore: firestoreReducer\n}) ","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport 'firebase/storage';\n\nvar config = {\n    apiKey: process.env.REACT_APP_APIKEY,\n    authDomain: \"safenotes-bb42b.firebaseapp.com\",\n    databaseURL: \"https://safenotes-bb42b.firebaseio.com\",\n    projectId: \"safenotes-bb42b\",\n    storageBucket: \"safenotes-bb42b.appspot.com\",\n    messagingSenderId: \"327547040246\",\n    appId: \"1:327547040246:web:18869d42525004f46917d7\",\n    measurementId: \"G-Z89FDF38LH\"\n};\nfirebase.initializeApp(config);\nfirebase.firestore();\n\nexport default firebase;","import { compose, createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nimport firebase from '../Firebase/Firebase';\nimport { getFirebase } from 'react-redux-firebase';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport firestore from 'redux-firestore';\n\n\nconst composeEnhancers = process.env.NODE_ENV === 'development'\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n    : compose;\n\n\nconst store = createStore(\n    rootReducer,\n    composeEnhancers(\n        reduxFirestore(firebase, firestore),\n        applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore }))\n    )\n)\n\nexport default store;","import React from 'react'\n\nexport const Loader = () => {\n    return (\n        <div class=\"lds-ripple\"><div></div><div></div></div>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { Loader } from './Components/Loader/Loader';\n\nimport firebase from 'firebase/app';\nimport myFirebase from '../src/Firebase/Firebase';\nimport { createFirestoreInstance } from 'redux-firestore';\nimport { ReactReduxFirebaseProvider } from 'react-redux-firebase';\nimport { useSelector } from 'react-redux';\nimport { isLoaded } from 'react-redux-firebase';\n\nconst config = {\n  userProfile: 'users',\n  useFirestoreForProfile: true\n}\n\nconst rrrfProps = {\n  firebase,\n  config: myFirebase,\n  config,\n  dispatch: store.dispatch,\n  createFirestoreInstance,\n}\n\nfunction AuthIsLoaded({ children }) {\n  const auth = useSelector(state => state.firebase.auth);\n  if (!isLoaded(auth)) return <div className='loader-div'><Loader /></div>\n  return children;\n}\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ReactReduxFirebaseProvider {...rrrfProps}>\n        <BrowserRouter>\n          <AuthIsLoaded>\n            <App />\n          </AuthIsLoaded>\n        </BrowserRouter>\n      </ReactReduxFirebaseProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}